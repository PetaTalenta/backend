version: '3.8'

services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
      args:
        INCLUDE_DEV_DEPS: "true"
    environment:
      NODE_ENV: development
      AUTH_V2_SERVICE_URL: http://auth-v2-service:3008
      ADMIN_SERVICE_URL: http://admin-service:3007
    command: npm run dev
    volumes:
      - ./api-gateway:/app
      - /app/node_modules
      - ./api-gateway/logs:/app/logs
    develop:
      watch:
        - action: sync
          path: ./api-gateway
          target: /app
          ignore:
            - node_modules/
            - logs/

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
      args:
        INCLUDE_DEV_DEPS: "true"
    environment:
      NODE_ENV: development
    command: npm run dev
    volumes:
      - ./auth-service:/app
      - /app/node_modules
      - ./auth-service/logs:/app/logs
    develop:
      watch:
        - action: sync
          path: ./auth-service
          target: /app
          ignore:
            - node_modules/
            - logs/

  assessment-service:
    build:
      context: ./assessment-service
      dockerfile: Dockerfile
      args:
        INCLUDE_DEV_DEPS: "true"
    environment:
      NODE_ENV: development
    command: npm run dev
    volumes:
      - ./assessment-service:/app
      - /app/node_modules
      - ./assessment-service/logs:/app/logs
    develop:
      watch:
        - action: sync
          path: ./assessment-service
          target: /app
          ignore:
            - node_modules/
            - logs/

  archive-service:
    build:
      context: ./archive-service
      dockerfile: Dockerfile
      args:
        INCLUDE_DEV_DEPS: "true"
    environment:
      NODE_ENV: development
    command: npm run dev
    volumes:
      - ./archive-service:/app
      - /app/node_modules
      - ./archive-service/logs:/app/logs
    develop:
      watch:
        - action: sync
          path: ./archive-service
          target: /app
          ignore:
            - node_modules/
            - logs/

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
      args:
        INCLUDE_DEV_DEPS: "true"
    environment:
      NODE_ENV: development
    command: npm run dev
    volumes:
      - ./notification-service:/app
      - /app/node_modules
      - ./notification-service/logs:/app/logs
    develop:
      watch:
        - action: sync
          path: ./notification-service
          target: /app
          ignore:
            - node_modules/
            - logs/

  chatbot-service:
    build:
      context: ./chatbot-service
      dockerfile: Dockerfile
      args:
        INCLUDE_DEV_DEPS: "true"
    environment:
      NODE_ENV: development
    command: npm run dev
    volumes:
      - ./chatbot-service:/app
      - /app/node_modules
      - ./chatbot-service/logs:/app/logs
    develop:
      watch:
        - action: sync
          path: ./chatbot-service
          target: /app
          ignore:
            - node_modules/
            - logs/

  analysis-worker:
    build:
      context: ./analysis-worker
      dockerfile: Dockerfile
      args:
        INCLUDE_DEV_DEPS: "true"
    # All environment variables are loaded from root .env file
    # No need to override specific variables here - they will be injected by docker-compose
    env_file: ./.env
    environment:
      NODE_ENV: development
    command: npm run dev
    volumes:
      - ./analysis-worker:/app
      - /app/node_modules
      - ./analysis-worker/logs:/app/logs
    develop:
      watch:
        - action: sync
          path: ./analysis-worker
          target: /app
          ignore:
            - node_modules/
            - logs/

  admin-service:
    build:
      context: ./admin-service
      dockerfile: Dockerfile
      args:
        INCLUDE_DEV_DEPS: "true"
    environment:
      NODE_ENV: development
      PORT: 3007
      AUTH_SERVICE_URL: http://auth-service:3001
      ARCHIVE_SERVICE_URL: http://archive-service:3002
      INTERNAL_SERVICE_KEY: ${INTERNAL_SERVICE_KEY}
      # Direct Database Access Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_DIALECT: postgres
      DB_POOL_MAX: 20
      DB_POOL_MIN: 5
      DB_POOL_ACQUIRE: 30000
      DB_POOL_IDLE: 10000
      JWT_SECRET: ${JWT_SECRET}
    container_name: atma-admin-service
    command: npm run dev
    ports:
      - "3007:3007"
    networks:
      - atma-network
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./admin-service:/app
      - /app/node_modules
      - ./admin-service/logs:/app/logs
    develop:
      watch:
        - action: sync
          path: ./admin-service
          target: /app
          ignore:
            - node_modules/
            - logs/

  auth-v2-service:
    build:
      context: ./auth-v2-service
      dockerfile: Dockerfile
      args:
        INCLUDE_DEV_DEPS: "true"
    environment:
      NODE_ENV: development
      PORT: 3008
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_PRIVATE_KEY: ${FIREBASE_PRIVATE_KEY}
      FIREBASE_CLIENT_EMAIL: ${FIREBASE_CLIENT_EMAIL}
      FIREBASE_API_KEY: ${FIREBASE_API_KEY}
      LOG_LEVEL: debug
    container_name: atma-auth-v2-service
    command: bun run dev
    networks:
      - atma-network
    volumes:
      - ./auth-v2-service:/app
      - ./auth-v2-service/logs:/app/logs
    develop:
      watch:
        - action: sync
          path: ./auth-v2-service
          target: /app
          ignore:
            - logs/

  documentation-service:
    build:
      context: ./documentation-service
      dockerfile: Dockerfile
      target: builder
      args:
        INCLUDE_DEV_DEPS: "true"
    user: root
    environment:
      NODE_ENV: development
    container_name: atma-documentation-service
    command: npm run dev -- --host 0.0.0.0 --port 80
    ports:
      - "8080:80"
    volumes:
      - ./documentation-service:/app
      - /app/node_modules
    develop:
      watch:
        - action: sync
          path: ./documentation-service
          target: /app
          ignore:
            - node_modules/
            - logs/

# Catatan:
# 1. /app/node_modules adalah anonymous volume agar tidak tertimpa host (performance & isolasi)
# 2. Production tetap gunakan docker-compose.yml saja (tanpa override) sehingga devDependencies tidak terinstall.
