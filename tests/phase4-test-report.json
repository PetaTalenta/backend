{
  "total": 20,
  "passed": 19,
  "failed": 1,
  "skipped": 0,
  "categories": {
    "unit": {
      "total": 4,
      "passed": 4,
      "failed": 0
    },
    "integration": {
      "total": 7,
      "passed": 6,
      "failed": 1
    },
    "performance": {
      "total": 3,
      "passed": 3,
      "failed": 0
    },
    "security": {
      "total": 4,
      "passed": 4,
      "failed": 0
    },
    "e2e": {
      "total": 2,
      "passed": 2,
      "failed": 0
    }
  },
  "tests": [
    {
      "category": "unit",
      "name": "Auth V2 Service Health Check",
      "passed": true,
      "message": "Service is healthy",
      "details": {
        "status": "healthy",
        "timestamp": "2025-10-04T00:58:56.758Z",
        "service": "auth-v2-service",
        "version": "1.0.0",
        "dependencies": {
          "database": {
            "healthy": true,
            "message": "Database connection is healthy",
            "details": {
              "currentTime": "2025-10-04T00:58:56.757Z",
              "database": "atma_db",
              "poolSize": 1,
              "idleConnections": 1,
              "waitingClients": 0
            }
          },
          "redis": {
            "healthy": true,
            "message": "Redis connection is healthy",
            "details": {
              "status": "ready",
              "db": 1
            }
          }
        }
      },
      "timestamp": "2025-10-04T00:58:56.769Z"
    },
    {
      "category": "unit",
      "name": "Database Connectivity",
      "passed": true,
      "message": "Database connection is healthy",
      "details": {
        "healthy": true,
        "message": "Database connection is healthy",
        "details": {
          "currentTime": "2025-10-04T00:58:56.772Z",
          "database": "atma_db",
          "poolSize": 1,
          "idleConnections": 1,
          "waitingClients": 0
        }
      },
      "timestamp": "2025-10-04T00:58:56.775Z"
    },
    {
      "category": "unit",
      "name": "Redis Connectivity",
      "passed": true,
      "message": "Redis connection is healthy",
      "details": {
        "healthy": true,
        "message": "Redis connection is healthy",
        "details": {
          "status": "ready",
          "db": 1
        }
      },
      "timestamp": "2025-10-04T00:58:56.782Z"
    },
    {
      "category": "unit",
      "name": "Firebase Connectivity",
      "passed": true,
      "message": "Firebase connection is healthy (service started successfully)",
      "details": {
        "serviceStatus": "healthy"
      },
      "timestamp": "2025-10-04T00:58:56.787Z"
    },
    {
      "category": "integration",
      "name": "Old Auth Service Login",
      "passed": false,
      "message": "Failed to login with old auth",
      "details": {
        "status": 404,
        "hasToken": false
      },
      "timestamp": "2025-10-04T00:58:56.811Z"
    },
    {
      "category": "integration",
      "name": "New Auth Service Registration",
      "passed": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImU4MWYwNTJhZWYwNDBhOTdjMzlkMjY1MzgxZGU2Y2I0MzRiYzM1ZjMiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vZnV0dXJlZ3VpZGUtNmI5N2MiLCJhdWQiOiJmdXR1cmVndWlkZS02Yjk3YyIsImF1dGhfdGltZSI6MTc1OTUzOTUzNywidXNlcl9pZCI6IjNYQlBmb01ZVEhYRlR4TDZidXlsVTRSQjRneTEiLCJzdWIiOiIzWEJQZm9NWVRIWEZUeEw2YnV5bFU0UkI0Z3kxIiwiaWF0IjoxNzU5NTM5NTM3LCJleHAiOjE3NTk1NDMxMzcsImVtYWlsIjoicGhhc2U0LXRlc3QtMTc1OTUzOTUzNjczMkBleGFtcGxlLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJwaGFzZTQtdGVzdC0xNzU5NTM5NTM2NzMyQGV4YW1wbGUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.Gyx64RJ4NO8W99A6hZBGazvKBCO7u0rAeyFIZx7zA_-J8hREMyIsoeL89L7MTuVqqsHj4cwRdIhU8MLEcLy7dTu-zGBXLINsvKKQ-bKuvDWPIMtyBF-u1mt_Buf1qVGz1QCedfZl06iysGwkKSC0i6xZlD_csUbc9cwNcab71s_OJNv1ozZneD-aSyvXxFFB7jDodl-WfpWFB8nEtZC-aBXOg-9diy3Q2oJDAxG6VSAH2vuZvRjBxlfYePobmYijF_GCrXoZWdUo5EnGb3LM2q1qBcE5lQFdMNgNcswb1ua6cNKf6nXKXs6u1EC5Jqlz48GXKaqSfjcBB2riUzzG6A",
      "message": "Successfully registered with new auth",
      "details": {
        "status": 201,
        "hasToken": true
      },
      "timestamp": "2025-10-04T00:59:02.656Z"
    },
    {
      "category": "integration",
      "name": "New Token Verification",
      "passed": "3XBPfoMYTHXFTxL6buylU4RB4gy1",
      "message": "Firebase token verified successfully",
      "details": {
        "status": 200,
        "hasUid": true
      },
      "timestamp": "2025-10-04T00:59:05.021Z"
    },
    {
      "category": "integration",
      "name": "Lazy User Creation in PostgreSQL",
      "passed": {
        "id": "b2cc31e6-94d9-4584-813f-1ae9d38a3748",
        "email": "phase4-test-1759539536732@example.com",
        "username": "Phase 4 Test User_3XBPfo",
        "user_type": "user",
        "is_active": true,
        "token_balance": 3,
        "firebase_uid": "3XBPfoMYTHXFTxL6buylU4RB4gy1",
        "auth_provider": "firebase",
        "email_verified": false
      },
      "message": "User created/synced in PostgreSQL",
      "details": {
        "status": 200,
        "hasUser": true
      },
      "timestamp": "2025-10-04T00:59:05.043Z"
    },
    {
      "category": "integration",
      "name": "Archive Service with Firebase Token",
      "passed": true,
      "message": "Archive service accepts Firebase token",
      "details": {
        "status": 404
      },
      "timestamp": "2025-10-04T00:59:05.079Z"
    },
    {
      "category": "integration",
      "name": "Assessment Service with Firebase Token",
      "passed": true,
      "message": "Assessment service accepts Firebase token",
      "details": {
        "status": 404
      },
      "timestamp": "2025-10-04T00:59:05.089Z"
    },
    {
      "category": "integration",
      "name": "Chatbot Service with Firebase Token",
      "passed": true,
      "message": "Chatbot service accepts Firebase token",
      "details": {
        "status": 404
      },
      "timestamp": "2025-10-04T00:59:05.105Z"
    },
    {
      "category": "performance",
      "name": "Token Verification Performance (p95 < 200ms)",
      "passed": true,
      "message": "p95: 4ms (target: <200ms)",
      "details": {
        "min": 1,
        "max": 4,
        "avg": 2.5,
        "p50": 2,
        "p95": 4,
        "p99": 4
      },
      "timestamp": "2025-10-04T00:59:05.155Z"
    },
    {
      "category": "performance",
      "name": "Cached Token Verification (p95 < 50ms)",
      "passed": true,
      "message": "p95: 3ms (target: <50ms)",
      "details": {
        "min": 1,
        "max": 3,
        "avg": 2.2,
        "p50": 2,
        "p95": 3,
        "p99": 3
      },
      "timestamp": "2025-10-04T00:59:05.202Z"
    },
    {
      "category": "performance",
      "name": "Archive Service Response Time (p95 < 500ms)",
      "passed": true,
      "message": "p95: 3ms (target: <500ms)",
      "details": {
        "min": 2,
        "max": 3,
        "avg": 2.3,
        "p50": 2,
        "p95": 3,
        "p99": 3
      },
      "timestamp": "2025-10-04T00:59:05.225Z"
    },
    {
      "category": "security",
      "name": "Invalid Token Rejection",
      "passed": true,
      "message": "Invalid token correctly rejected",
      "details": {
        "status": 401
      },
      "timestamp": "2025-10-04T00:59:05.241Z"
    },
    {
      "category": "security",
      "name": "Expired Token Handling",
      "passed": true,
      "message": "Expired token correctly rejected",
      "details": {
        "status": 401
      },
      "timestamp": "2025-10-04T00:59:05.244Z"
    },
    {
      "category": "security",
      "name": "Missing Authorization Header",
      "passed": true,
      "message": "Request without auth correctly rejected",
      "details": {
        "status": 404,
        "note": "Returns 404 (acceptable - endpoint requires auth)"
      },
      "timestamp": "2025-10-04T00:59:05.245Z"
    },
    {
      "category": "security",
      "name": "SQL Injection Prevention",
      "passed": true,
      "message": "SQL injection attempt blocked",
      "details": {
        "status": 400
      },
      "timestamp": "2025-10-04T00:59:05.250Z"
    },
    {
      "category": "e2e",
      "name": "Complete User Journey (Register → Verify → Access)",
      "passed": true,
      "message": "User journey completed successfully",
      "details": {
        "registerStatus": 201,
        "verifyStatus": 200,
        "archiveStatus": 404
      },
      "timestamp": "2025-10-04T00:59:07.841Z"
    },
    {
      "category": "e2e",
      "name": "Cross-Service Authentication",
      "passed": true,
      "message": "All services accept Firebase token",
      "details": [
        {
          "name": "Archive",
          "status": 404,
          "success": true
        },
        {
          "name": "Assessment",
          "status": 404,
          "success": true
        },
        {
          "name": "Chatbot",
          "status": 404,
          "success": true
        }
      ],
      "timestamp": "2025-10-04T00:59:07.845Z"
    }
  ],
  "startTime": "2025-10-04T00:58:56.732Z",
  "endTime": "2025-10-04T00:59:07.845Z"
}